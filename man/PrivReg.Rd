% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/privreg.R
\name{PrivReg}
\alias{PrivReg}
\title{Private regression with vertically partitioned data}
\value{
an R6 object of class PrivReg
}
\description{
Perform privacy-preserving regression modeling across different institutions.
This class implements regression with gaussian and binomial responses using
block coordinate descent (Van Kesteren, Sun, and Ippel; in preparation).
}
\section{Usage}{

\preformatted{alice <- PrivReg$new(formula, data, family = "gaussian",
                     name = "alice", verbose = FALSE, crypt_key = "testkey")

alice$listen()
alice$connect(127.0.0.1)
alice$disconnect()

alice$estimate()
alice$bootstrap()

alice$summary()
alice$plot_paths()
}
}

\section{Arguments}{

\describe{
 \item{alice}{a PrivReg object}
 \item{formula}{model formula for the regression model at this institution}
 \item{data}{data frame for the variables in the model formula}
 \item{family}{response family as in glm. Currently only gaussian and binomial are supported}
 \item{name}{name of this institution}
 \item{verbose}{whether to print debug information}
 \item{crypt_key}{pre-shared key used to encrypt communication}
}
}

\section{Details}{

\code{$new()} instantiates and returns a new PrivReg object.
\code{$listen()} listens for incoming connections from a partner institution
\code{$connect()} connects to a listening partner institution
\code{$disconnect()} disconnects from the partner institution
\code{$estimate()} computes parameter estimates through block coordinate descent
\code{$bootstrap()} computes bootstrap distribution of parameters using semiparametric bootstrap
\code{$summary()} displays a summary of the object
\code{$plot_paths()} plots the paths of the parameters over the estimation iterations
}

\examples{
\dontrun{
# generate some data
set.seed(45)
X <- matrix(rnorm(1000), 100)
b <- runif(10, -1, 1)
y <- X \%*\% b + rnorm(100, sd = sqrt(b \%*\% S \%*\% b))
# split into alice and bob institutions
alice_data <- data.frame(y, X[, 1:5])
bob_data   <- data.frame(y, X[, 6:10])
# create connection
alice$listen()
bob$connect("127.0.0.1") # if alice is on different computer, change ip
# estimate
alice$estimate()
# ...
# bootstrap
alice$bootstrap()
# ...
# compare results to lm()
summary(lm(y ~ X + 0))
alice$summary()
bob$summary()
}

}
